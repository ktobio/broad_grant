set more offcapture log closeclearset scheme lean2/*insheet using "data\AllGrantRelatedBroadieData_anon.csv", names caselabel var EmployeeID "Unique identifier"label var WorkerStatus "Active, On Leave, Terminated"label var WorkerType "High level definition of person: Employee (paid by Broad) or Contingent (not paid by Broad)"label var WorkerSubType "More granular definition of person: Employee, Affiliate paid by Broad, Affiliate unpaid by Broad"label var EmployeeClassification "Most granular definition of person (includes flag for trainees, affiliates who are members of partner institutions, affiliations who are non-partner institution affiliated, etc)"label var MostRecentHireDate "Latest hire date to Broad (some affiliates are hired, leave and are re-hired so this reflects the last date they were hired)"label var PositionStartDate "Latest role start date (update triggered by promotion, role change, lateral move, etc)"label var OriginalPostdocStartDate "First start date at Broad if a trainee (postdoc)"label var PostdocStartDate "Latest start date at Broad if a trainee (postdoc)"label var InstituteScientist "New designation for staff scientists who are critical contributors to Broad scientific endeavors (these are all employees by definition)"label var JobProfile "Job title"label var BusinessTitle "Additional title if specified by person or supervisor"label var ProfessionalScientist "Staff scientist designation (includes research scientists, computational scientists, etc)"label var ManagementLevel "New designation for level of management (non-manager, manager, supervisor, associate director, director, etc)"label var Manager "Direct supervisor (may or may not be person who manages day-to-day activities)"label var SupervisoryOrganization "Manager's org unit"label var FTE "% of full time effort"label var TopLevelOrg "Top level of org chart"label var BroadGroup "Second level of org chart"label var Subgroup "Third and most granular level of org chart"label var AffiliateLocation "Affiliate's home institution"label var CompensationGrade "Wage grade (set in part by market analysis of salaries for specific job familes and roles)"label var TotalBasePayAmount "Annual salary"label var PayGroup "Code for Payroll (unlikely to be useful for our analyses)"label var EligibleforBenefits "All Broad paid employees and affiliates are eligible for benefits; unpaid affiliates are not "label var RaceEthnicity "This is self-reported or best guess by HR to comply with EEO requirements.  Should be present for all paid Broad employees and affiliates.  "label var TerminationDate "Date when last terminated"label var PrimaryTerminationReason "Most consistent field for reason for departure"label var SecondaryTerminationReasons "Additional field for reason for departure (less consistent)"label var CFTerminationEventVoluntaryorIn "Voluntary or involuntary termination flag"save data\broadie, replace*/use data\broadiesplit SupervisoryOr, p("(")drop SupervisoryOrg*2 SupervisoryOrg*3 SupervisoryOrganizationrename Supervisory SupervisoryOrganizationreplace SupervisoryOrganization=trim(SupervisoryOrganization)log using "logs\HR_$S_DATE", replace d, fullnamestab BroadGrouptab Subgrouptab SupervisoryOrbysort BroadGroup: tab Subgroupbysort BroadGroup: tab SupervisoryOrtab WorkerType	tab WorkerSubType	tab EmployeeClassificationbysort WorkerType: tab WorkerSubbysort WorkerType: tab EmployeeClassificationstop/*insheet using "data\Effort Distributions Calender 2016 - June 2017.csv", names caseg FullName=FirstName + " " + LastNameorder Employee FirstName LastName FullNamelog using "logs\codebook_broad_grants_$S_DATE.log", replacecodebook, all mv detail tabulate(10)log closesave data\grants, replace*/log using "logs\grants_$S_DATE", replaceuse data\grantscountcount if Salary==Effortg diff=Salary-Efforttab diff if Salary~=Effortbysort FundedProgLVL3: tab FundedProgramTbysort FundedProgLVL4: tab FundedProgramTegen group=group( Grant GrantMediumText Calendaryear Calendarmonth)sum group, detailg counter=1collapse (sum) counter, by (group Grant GrantMediumText Calendaryear Calendarmonth)sum countersum counter, detailsort Calendaryear Calendarmonth Grant*gsort -counterlist Grant* if _n==1clearuse data\grantstab Effortbysort EmployeeID Calendaryear Calendarm: egen sumEffort=sum(Effort)sum sumEffort, detailkeep if sumEffort~=100sort EmployeeID Calendar*drop if EmployeeID==EmployeeID[_n-1] & Calendary==Calendary[_n-1] & Calendarm==Calendarm[_n-1]counttab sumEffortclearuse data\grantstab Salarybysort EmployeeID Calendaryear Calendarm: egen sumSalary=sum(Salary)sum sumSalary, detailkeep if sumSalary~=100sort EmployeeID Calendar*drop if EmployeeID==EmployeeID[_n-1] & Calendary==Calendary[_n-1] & Calendarm==Calendarm[_n-1]counttab sumSalaryclearuse data\grantskeep Grant* EmployeeIDduplicates dropg counter=1collapse (sum) counter, by (EmployeeID)sum counter, detailtab countersort counter Elist EmployeeID counter if counter>=7clear/*use data\grantsg counter=1collapse (sum) counter, by (Grant* Calendar*)rename Calendaryear yearrename Calendarm monthgen modate = ym(year, month) format modate %tm sort modateegen grantgroup=group(Grant GrantM)collapse (mean) counter, by (Grant GrantM)gsort counterlist GrantM if _n<=15sort counterg order = _ngraph bar counter, over(Grant, sort(order) label(nolabels)) ytitle("Average Number of People per Grant" "January 2016 - July 2017") b1title("Each Grant")graph save "output\\people_per_grant", replacegraph export "output\\tmp.png", replace*png2rtf using "output\\broad_grant_$S_DATE.doc", g(output\\tmp.png) replace  sum counter, detailgsort -ordersort orderdrop if counter>100graph bar counter, over(Grant, sort(order) label(nolabels)) ytitle("Average Number of People per Grant" "January 2016 - July 2017") b1title("Each Grant")graph save "output\\people_per_grant2", replacegraph export "output\\tmp.png", replace*png2rtf using "output\\broad_grant_$S_DATE.doc", g(output\\tmp.png) appendsum counter, detailclear*/use data\grantsg counter=1keep Grant* counter EmployeeID FullNameduplicates dropcollapse (sum) counter, by (Grant*)gsort counterg order=_ngraph bar counter, over(Grant, sort(order) label(nolabels)) ytitle("Number of Unique People per Grant" "January 2016 - July 2017") b1title("Each Grant")graph save "output\\unique_people_per_grant", replacegraph export "output\\tmp.png", replace*png2rtf using "output\\broad_grant_$S_DATE.doc", g(output\\tmp.png) appendsum counter, detailgsort -orderlist Grant* counter if _n<=15sort orderdrop if counter>100graph bar counter, over(Grant, sort(order) label(nolabels)) ytitle("Number of Unique People per Grant" "January 2016 - July 2017") b1title("Each Grant")graph save "output\\unique_people_per_grant2", replacegraph export "output\\tmp.png", replace*png2rtf using "output\\broad_grant_$S_DATE.doc", g(output\\tmp.png) appendsum counter, detailclear/*use data\grantsg counter=1collapse (sum) counter, by (EmployeeID FullName Calendar*)rename Calendaryear yearrename Calendarm monthgen modate = ym(year, month) format modate %tm sort modatecollapse (mean) counter, by (EmployeeID FullName )sort counterg order = _ngraph bar counter, over(EmployeeID, sort(order) label(nolabels)) ytitle("Average Number of Grants" "January 2016 - July 2017") b1title("Individual Employees")graph save "output\\grant_per_person", replacegraph export "output\\tmp.png", replace*png2rtf using "output\\broad_grant_$S_DATE.doc", g(output\\tmp.png) appendsum counter, detaillist FullName  if _n<=15gsort -orderclear*/use data\grantskeep EmployeeID Grant* FullName duplicates dropg counter=1collapse (sum) counter, by (EmployeeID FullName )sort counterg order = _ngraph bar counter, over(EmployeeID, sort(order) label(nolabels)) ytitle("Number of Unique Grants" "January 2016 - July 2017") b1title("Individual Employees")graph save "output\\unique_grant_per_person", replacegraph export "output\\tmp.png", replace*png2rtf using "output\\broad_grant_$S_DATE.doc", g(output\\tmp.png) appendsum counter, detailgsort -orderlist FullName counter if _n<=15clearuse data\grantskeep GrantMedium FundedProgramTextduplicates dropg counter=1collapse (sum) counter, by (Grant)sort counterg order = _ngraph bar counter, over(Grant, sort(order) label(nolabels)) ytitle("Number of Unique Programs per Grant" "January 2016 - July 2017") b1title("Each Grant")graph save "output\\unique_programs_per_grant", replacegraph export "output\\tmp.png", replace*png2rtf using "output\\broad_grant_$S_DATE.doc", g(output\\tmp.png) appendsum counter, detailgsort -orderlist Grant  counter if _n<=15clearuse data\grantskeep GrantMedium FundedProgramTextduplicates dropg counter=1collapse (sum) counter, by (Funded)sort counterg order = _ngraph bar counter, over(Funded, sort(order) label(nolabels)) ytitle("Number of Unique Grants per Detailed Program" "January 2016 - July 2017") b1title("Each Detailed Program")graph save "output\\unique_grants_per_program", replacegraph export "output\\tmp.png", replace*png2rtf using "output\\broad_grant_$S_DATE.doc", g(output\\tmp.png) appendsum counter, detailclearuse data\grantskeep GrantMedium FundedProgLVL3duplicates dropg counter=1collapse (sum) counter, by (Funded)sort counterg order = _ngraph bar counter, over(Funded, sort(order) label(angle(45) labsize(vsmall))) ytitle("Number of Unique Grants per Program" "Level 3, January 2016 - July 2017") b1title("Each Level 3 Program")graph save "output\\unique_grants_per_program_level3", replacegraph export "output\\tmp.png", replace*png2rtf using "output\\broad_grant_$S_DATE.doc", g(output\\tmp.png) appendsum counter, detailgsort -orderlist Funded counter if _n<=15clearuse data\grantskeep GrantMedium FundedProgLVL4duplicates dropg counter=1collapse (sum) counter, by (Funded)sort counterg order = _ngraph bar counter, over(Funded, sort(order) label(angle(45) labsize(tiny))) ytitle("Number of Unique Grants per Program" "Level 4, January 2016 - July 2017") b1title("Each Level 4 Program")graph save "output\\unique_grants_per_program_level4", replacegraph export "output\\tmp.png", replace*png2rtf using "output\\broad_grant_$S_DATE.doc", g(output\\tmp.png) appendsum counter, detailgsort -orderlist Funded counter if _n<=15clearerase  "output\\tmp.png"stopgraph bar counter, over(Country, sort(order) label(nolabels)) ytitle("Number of Tenants") xsize(9)graph save "output\\output\\tenants_cutoffa", replacegraph export "output\\tenants_cutoffa.png", replace